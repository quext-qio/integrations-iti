{
  "swagger": "2.0",
  "info": {
    "title": "Quext's Integrations",
    "version": "1.0.0",
    "description": "Immediate Transaction Information Swagger for Quext's Integrations Team",
    "contact": {
      "name": "Quext",
      "url": "https://onequext.com/"
    }
  },
  "host": "integrations-api.stage.quext.io",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "APIKeyHeader": {
      "type": "apiKey",
      "name": "x-api-key",
      "in": "header",
      "description": "API Key for Quext Integrations"
    }
  },
  "paths": {
    "/api/v1/placepay/new-account": {
      "post": {
        "tags": [
          "PlacePay"
        ],
        "description": "Create new account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Create User Data",
            "in": "body",
            "description": "JSON data of user to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlacepayUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/placepay/token": {
      "get": {
        "tags": [
          "PlacePay"
        ],
        "description": "Create new access token related to an account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Placepay accountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/engrain/status": {
      "get": {
        "tags": [
          "Engrain"
        ],
        "description": "Get status of Engrain Job",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/engrain/job": {
      "patch": {
        "tags": [
          "Engrain"
        ],
        "description": "In all environments, updating is allowed using this endpoint, but by default, all jobs are inactive. Only the job in the production environment will be active.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Run Job Permission",
            "in": "body",
            "description": "The 'run' value will be sent as a string, either 'True' or 'False,' to update the job's permission to run or not.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EngrainJobPermission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v2/general/guestcards": {
      "post": {
        "tags": [
          "Guestcards"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "description": "Save prospects information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Prospect Data",
            "in": "body",
            "description": "JSON data of prospect to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GuestcardProspect"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/api/v2/rentdynamics/{customerUUID}/chargeCodes/{communityUUID}": {
      "post": {
        "tags": [
          "RentDynamics"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "description": "Rent Dynamics API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerUUID",
            "in": "path",
            "description": "UUID for valid customer in Rent Dynamics",
            "required": true,
            "type": "string"
          },
          {
            "name": "communityUUID",
            "in": "path",
            "description": "UUID for valid community in Rent Dynamics",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/api/v2/rentdynamics/{customerUUID}/residents/{communityUUID}": {
      "post": {
        "tags": [
          "RentDynamics"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "description": "Rent Dynamics API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerUUID",
            "in": "path",
            "description": "UUID for valid customer in Rent Dynamics",
            "required": true,
            "type": "string"
          },
          {
            "name": "communityUUID",
            "in": "path",
            "description": "UUID for valid community in Rent Dynamics",
            "required": true,
            "type": "string"
          },
          {
            "name": "Resident Body",
            "in": "body",
            "description": "Body with dates range to get residents information (move_in_date, move_out_date)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RentDynamicsResidentBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/api/v2/rentdynamics/{customerUUID}/transactions/{communityUUID}": {
      "post": {
        "tags": [
          "RentDynamics"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "description": "Rent Dynamics API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerUUID",
            "in": "path",
            "description": "UUID for valid customer in Rent Dynamics",
            "required": true,
            "type": "string"
          },
          {
            "name": "communityUUID",
            "in": "path",
            "description": "UUID for valid community in Rent Dynamics",
            "required": true,
            "type": "string"
          },
          {
            "name": "Transactions Body",
            "in": "body",
            "description": "Body with dates range to get transactions information by resident id (start_date, end_date, resident_id)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RentDynamicsTransactionsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/api/v2/rentdynamics/{customerUUID}/customerEvents/{communityUUID}": {
      "post": {
        "tags": [
          "RentDynamics"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "description": "Rent Dynamics API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerUUID",
            "in": "path",
            "description": "UUID for valid customer in Rent Dynamics",
            "required": true,
            "type": "string"
          },
          {
            "name": "communityUUID",
            "in": "path",
            "description": "UUID for valid community in Rent Dynamics",
            "required": true,
            "type": "string"
          },
          {
            "name": "Customer Events Body",
            "in": "body",
            "description": "Body with dates range to get customer events information (start_date, end_date)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RentDynamicsCustomerEventsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/api/v2/rentdynamics/{customerUUID}/unitsAndFloorPlans/{communityUUID}": {
      "post": {
        "tags": [
          "RentDynamics"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "description": "Rent Dynamics API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerUUID",
            "in": "path",
            "description": "UUID for valid customer in Rent Dynamics",
            "required": true,
            "type": "string"
          },
          {
            "name": "communityUUID",
            "in": "path",
            "description": "UUID for valid community in Rent Dynamics",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/api/v2/salesforce/liftoff": {
      "get": {
        "tags": [
          "Salesforce"
        ],
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "description": "Salesforce API",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/api/v2/jira/qoops": {
      "post": {
        "tags": [
          "Jira"
        ],
        "description": "Endpoint to report issues to Jira",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Qoops Data",
            "in": "body",
            "description": "Information of the issue to be reported",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JiraQoopsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "502": {
            "description": "Bad Gateway"
          }
        }
      }
    }
  },
  "definitions": {
    "PlacepayUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "userType": {
          "type": "string",
          "enum": [
            "payer"
          ]
        }
      }
    },
    "EngrainJobPermission": {
      "type": "object",
      "properties": {
        "run": {
          "type": "string",
          "enum": [
            "False",
            "True"
          ]
        }
      }
    },
    "GuestcardProspect": {
      "type": "object",
      "properties": {
        "platformData": {
          "type": "object",
          "properties": {
            "customerUUID": {
              "type": "string"
            },
            "communityUUID": {
              "type": "string"
            }
          }
        },
        "guest": {
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          }
        },
        "guestComment": {
          "type": "string"
        },
        "guestPreference": {
          "type": "object",
          "properties": {
            "desiredBeds": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ONE_BEDROOM",
                  "TWO_BEDROOM",
                  "THREE_BEDROOM"
                ]
              }
            },
            "desiredRent": {
              "type": "integer"
            },
            "desiredBaths": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "moveInDate": {
              "type": "string",
              "format": "date"
            },
            "contactPreference": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "sms",
                  "email",
                  "phone"
                ]
              }
            },
            "leaseTermMonths": {
              "type": "integer"
            },
            "noOfOccupants": {
              "type": "integer"
            },
            "moveInReason": {
              "type": "string"
            },
            "preferredAmenities": {
              "type": "string"
            }
          }
        },
        "source": {
          "type": "string",
          "enum": [
            "ws",
            "dh"
          ]
        },
        "tourScheduleData": {
          "type": "object",
          "properties": {
            "start": {
              "type": "string",
              "format": "date"
            }
          }
        }
      }
    },
    "RentDynamicsResidentBody": {
      "type": "object",
      "properties": {
        "move_in_date": {
          "type": "string",
          "format": "date"
        },
        "move_out_date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "RentDynamicsTransactionsBody": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string",
          "format": "date"
        },
        "end_date": {
          "type": "string",
          "format": "date"
        },
        "resident_id": {
          "type": "string"
        }
      }
    },
    "RentDynamicsCustomerEventsBody": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string",
          "format": "date"
        },
        "end_date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "JiraQoopsBody": {
      "type": "object",
      "properties": {
        "project_name": {
          "type": "string"
        },
        "ticket_summary": {
          "type": "string"
        },
        "ticket_description": {
          "type": "string"
        },
        "issue_type": {
          "type": "string",
          "enum": [
            "Bug",
            "Task"
          ]
        },
        "priority": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "list_issues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "testing": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ]
        }
      }
    }
  }
}